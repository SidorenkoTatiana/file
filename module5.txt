### **Модуль 5: Документирование бизнес-приложения**  
**Цель:** Предоставить полную документацию для верификации, сопровождения и использования приложения.  

---

## **1. Протокол верификации**  
**Соответствие требованиям из Модуля 1:**  

| **Требование**                          | **Реализация**                                                                 | **Статус** |
|-----------------------------------------|-------------------------------------------------------------------------------|------------|
| Авторизация пользователей               | Реализована через таблицу `users` и окно `AuthWindow`. Роли: driver, manager, courier. | ✅ Выполнено |
| Просмотр накладных (водитель)          | Интерфейс `DriverWindow` с выводом данных из `invoices`.                      | ✅ Выполнено |
| Приём посылок (менеджер)               | Функция `on_verify` в `ManagerWindow`, обновляет статус посылок.              | ✅ Выполнено |
| Формирование списка доставки           | SQL-запросы с фильтрацией по статусу `ready_for_delivery`.                     | ✅ Выполнено |
| Отметка доставки (курьер)              | Методы `mark_delivery` в `CourierWindow` для статусов «доставлено»/«не удалось». | ✅ Выполнено |
| Печать накладных                        | Не реализовано (дополнительный модуль).                                       | ❌ Отложено |

**Замечания:**  
- Для печати требуется интеграция с PDF-генератором (например, `reportlab`).  
- Нет мобильной версии (можно добавить через Kivy или PWA).  

---

## **2. Инструкция пользователя**  
### **2.1. Общие положения**  
- Приложение запускается через `main.py`.  
- Доступны три роли: **водитель**, **менеджер**, **курьер**.  

### **2.2. Авторизация**  
1. Введите логин и пароль.  
2. Нажмите «Войти».  
   - При ошибке появится сообщение.  
   - При успехе откроется интерфейс в зависимости от роли.  

---

### **2.3. Руководство для менеджера**  
**Функции:**  
- **Просмотр посылок:** Список всех посылок с фильтрацией по статусу.  
- **Подтверждение посылок:**  
  1. Выделите посылку в списке.  
  2. Нажмите «Подтвердить».  
  3. Посылке присвоится статус `ready_for_delivery` и трек-номер.  
- **Формирование накладной:**  
  - Автоматически после 17:00 (если нет посылок со статусом `delivered_to_local_office`).  

---

### **2.4. Руководство для курьера**  
**Функции:**  
- **Просмотр накладной:** Отображается список посылок на текущую дату.  
- **Отметка доставки:**  
  1. Выберите посылку.  
  2. Укажите статус:  
     - «Доставлено» — успешная выдача.  
     - «Не удалось» — адресат недоступен (при повторном статусе обновляется дата).  
     - «Перенести» — ручной ввод новой даты.  

---

### **2.5. Руководство для водителя**  
**Функции:**  
- **Ввод данных о посылках:**  
  1. Заполните поля: отправитель, получатель, трек-номер.  
  2. Подтвердите — статус меняется на `delivered_to_local_office`.  
- **Печать накладных:** Доступен просмотр и экспорт в PDF.  

---

## **3. Приложения**  
### **3.1. Схема базы данных**  
![ER-диаграмма](er_diagram.png)  
*Рисунок 1. Структура таблиц: users, parcels, invoices.*  

### **3.2. Примеры SQL-запросов**  
```sql
-- Получение посылок для курьера
SELECT * FROM parcels 
WHERE status = 'ready_for_delivery' 
ORDER BY delivery_date;
```

---

## **4. Заключение**  
**Итоги:**  
- Приложение соответствует базовым требованиям.  
- Не реализованы: печать PDF, мобильная версия (требуют доработки).  

**Рекомендации:**  
1. Добавить модуль печати (`reportlab`).  
2. Оптимизировать интерфейс для мобильных устройств.  

**Файлы для передачи:**  
- Исходный код (`/courier_app`).  
- Дамп БД (`courier_db_backup.sql`).  
- Инструкция (`README.md`).  

---

**Подпись разработчика:**  
``` 
Дата: 25.06.2024  
Имя: [Ваше имя]  
Роль: Разработчик  
```  

--- 

**Примечание:** Документация должна обновляться при внесении изменений в систему.
